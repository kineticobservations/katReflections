?How did viewing a diff between two versions of a file help you see the bug that was introduced?

Easy way to find a typo that was introduced.
Also an easy way to see changes if many changes were made that work cycle.


?How could having easy access to the entire history of a file make you a more efficient programmer in the long term.

By being able to go back and see previous changes.
Also if you mess up a section of code, you could always rewind to a previous version
to see how to fix it.


?What do yo think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros of Manual Commits:
-Each commit can be for a logical update
-Keeps from versions getting out of control
-Eliminates buggy commits
Cons of Manual Commits
-easy to forget to commit often enough
Pros of Auto Saves
-makes sure you don't lose much progress
Cons of Auto Saves
-Saves might not make sense
-Or break
-And because you can't say what is different each time, versions could get out of control


?Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

?The more common use case for things like Google Docs, makes more sense to track each file separetly.
Git is more commonly used for use cases (like code) that make more sense to track things together.


?How can you use the commands git log and git diff to view the history of files?

git log shows the different versions that have been commited, along with the note of what has changed.
git diff shows the differences between different commits


?How might using version control make you more confident to make changes that could break something?

Because version control is the power of rewind


?Now that you have you're workspace set up, what do you want to try using Git for?

Main app project. Probably every large project down the road.


?
