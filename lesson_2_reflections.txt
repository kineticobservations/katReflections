?What happens when you initialize a repository? Why do you need to do it?

creates a new repository in that directory. To use version control.


?How is the staging area different from the working directory and the repository? What value do you think it offers.

The staging area is where you put the files you want to commit.
The working directory shows what has and hasn't been commited.
Lets you have more control on what you want to do.


? How can you use the staging area to make sure you have one commit per logical change.

By comparing the staging area to the most recent commit. That way you can see if those changes
are part of the one logical change.


?What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches help by having many different versions saved.
This would be useful when testing out a new feature to add. Or testing layout changes with users. 


?How do the diagrams help you visualize the branch structure?

A visual representation helps keep track of what branches start where and are an easy way to see if any commits would be unreachable.


?What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

git merge takes the parent of both branches and compares them to the tips of each branch.
by doing so it can take out lines that were omitted and add lines that were added. It takes
all of those differences and merges them into one commit. This commit will be on the branch name that was currently
checked out. Then, since the new commit will have parents from each branch, you can delete one of the branches and
not abandon those commits. They will then show up by timestamp in git log. Since they will be all jumbled together,
you can use git show to see what the parent of a commit was.


?What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Allways doing merging manually is a lot of work when for some changes they can be logically deduced what to keep
and what to get rid of. However there are many cases when changes are ambiguous. Therefore it is important to do 
those manually instead of random introducing bugyy/weird code.


?
